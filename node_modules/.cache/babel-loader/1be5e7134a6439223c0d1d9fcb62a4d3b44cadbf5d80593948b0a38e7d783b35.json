{"ast":null,"code":"import axios from 'axios';\nexport const usersService = {\n  async getAllUsers() {\n    try {\n      // In a real application, this would be an API call\n      const usersData = localStorage.getItem('usersData');\n      return usersData ? JSON.parse(usersData).users : [];\n    } catch (error) {\n      console.error('Error getting users:', error);\n      return [];\n    }\n  },\n  async saveUser(userData) {\n    try {\n      const existingUsers = await this.getAllUsers();\n      const updatedUsers = {\n        users: [...existingUsers, userData]\n      };\n      localStorage.setItem('usersData', JSON.stringify(updatedUsers));\n      return true;\n    } catch (error) {\n      console.error('Error saving user:', error);\n      return false;\n    }\n  },\n  async findUserByCredentials(username, password) {\n    try {\n      const users = await this.getAllUsers();\n      return users.find(user => user.name === username && user.pwd === password);\n    } catch (error) {\n      console.error('Error finding user:', error);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["axios","usersService","getAllUsers","usersData","localStorage","getItem","JSON","parse","users","error","console","saveUser","userData","existingUsers","updatedUsers","setItem","stringify","findUserByCredentials","username","password","find","user","name","pwd"],"sources":["C:/Users/shouk/OneDrive/Desktop/job portal/src/services/users.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const usersService = {\r\n  async getAllUsers() {\r\n    try {\r\n      // In a real application, this would be an API call\r\n      const usersData = localStorage.getItem('usersData');\r\n      return usersData ? JSON.parse(usersData).users : [];\r\n    } catch (error) {\r\n      console.error('Error getting users:', error);\r\n      return [];\r\n    }\r\n  },\r\n\r\n  async saveUser(userData) {\r\n    try {\r\n      const existingUsers = await this.getAllUsers();\r\n      const updatedUsers = {\r\n        users: [...existingUsers, userData]\r\n      };\r\n      localStorage.setItem('usersData', JSON.stringify(updatedUsers));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error saving user:', error);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  async findUserByCredentials(username, password) {\r\n    try {\r\n      const users = await this.getAllUsers();\r\n      return users.find(user => user.name === username && user.pwd === password);\r\n    } catch (error) {\r\n      console.error('Error finding user:', error);\r\n      return null;\r\n    }\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG;EAC1B,MAAMC,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF;MACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACnD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAACK,KAAK,GAAG,EAAE;IACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAME,QAAQA,CAACC,QAAQ,EAAE;IACvB,IAAI;MACF,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACX,WAAW,CAAC,CAAC;MAC9C,MAAMY,YAAY,GAAG;QACnBN,KAAK,EAAE,CAAC,GAAGK,aAAa,EAAED,QAAQ;MACpC,CAAC;MACDR,YAAY,CAACW,OAAO,CAAC,WAAW,EAAET,IAAI,CAACU,SAAS,CAACF,YAAY,CAAC,CAAC;MAC/D,OAAO,IAAI;IACb,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMQ,qBAAqBA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9C,IAAI;MACF,MAAMX,KAAK,GAAG,MAAM,IAAI,CAACN,WAAW,CAAC,CAAC;MACtC,OAAOM,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,QAAQ,IAAIG,IAAI,CAACE,GAAG,KAAKJ,QAAQ,CAAC;IAC5E,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO,IAAI;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
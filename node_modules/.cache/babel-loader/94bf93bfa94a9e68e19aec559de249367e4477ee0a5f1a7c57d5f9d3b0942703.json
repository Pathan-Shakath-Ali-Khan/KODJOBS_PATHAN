{"ast":null,"code":"import axios from 'axios';\nexport const authService = {\n  async login(username, password) {\n    try {\n      const response = await axios.get('/users.json');\n      const users = response.data;\n      return users.find(user => user.name === username && user.pwd === password);\n    } catch (error) {\n      console.error('Authentication error:', error);\n      throw error;\n    }\n  },\n  isAuthenticated() {\n    return localStorage.getItem('user') !== null;\n  },\n  logout() {\n    localStorage.removeItem('user');\n  }\n};","map":{"version":3,"names":["axios","authService","login","username","password","response","get","users","data","find","user","name","pwd","error","console","isAuthenticated","localStorage","getItem","logout","removeItem"],"sources":["C:/Users/shouk/OneDrive/Desktop/job portal/src/services/auth.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const authService = {\r\n  async login(username, password) {\r\n    try {\r\n      const response = await axios.get('/users.json');\r\n      const users = response.data;\r\n      return users.find(user => user.name === username && user.pwd === password);\r\n    } catch (error) {\r\n      console.error('Authentication error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  isAuthenticated() {\r\n    return localStorage.getItem('user') !== null;\r\n  },\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,aAAa,CAAC;MAC/C,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI;MAC3B,OAAOD,KAAK,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKR,QAAQ,IAAIO,IAAI,CAACE,GAAG,KAAKR,QAAQ,CAAC;IAC5E,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,eAAeA,CAAA,EAAG;IAChB,OAAOC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI;EAC9C,CAAC;EAEDC,MAAMA,CAAA,EAAG;IACPF,YAAY,CAACG,UAAU,CAAC,MAAM,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}